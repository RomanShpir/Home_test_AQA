name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          # optional: install browser drivers/Playwright etc.

      - name: Lint (ruff) & format check (black, isort)
        run: |
          ruff check .
          black --check .
          isort --check-only .

      - name: Run API tests
        env:
          IPSTACK_API_KEY: ${{ secrets.IPSTACK_API_KEY }}
          IPSTACK_INVALID_KEY: foo
        run: |
          mkdir -p reports artifacts
          pytest -q tests/api --maxfail=1 --disable-warnings \
            --html=reports/api-report.html --self-contained-html

      # example of a step for UI (I'll leave it as a template; adapt it to your runner)
      - name: Run UI tests (optional)
        if: ${{ false }}  # change to true when ready
        run: |
          pytest -q tests/ui --maxfail=1 --disable-warnings \
            --html=reports/ui-report.html --self-contained-html

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: pytest-reports-${{ matrix.python-version }}
          path: reports/

      - name: Upload test artifacts (screens, logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.python-version }}
          path: |
            artifacts/
            **/*.png
            **/*.log
            **/trace.zip
          if-no-files-found: ignore
